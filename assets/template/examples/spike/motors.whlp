; Wheel, copyright (c) 2021 - present by Arno van der Vegt
; Distributed under an MIT license: https://arnovandervegt.github.io/wheel/license.txt
#project "Spike motors example"

#include "lib/modules/standard.whl"
#include "lib/modules/motor.whl"
#include "lib/modules/device.whl"
#include "lib/modules/spike.whl"

#display "Spike ports"

proc main()
    ; Select the Spike device in the simulator...
    selectDevice(DEVICE_SPIKE)

    ; Reset the motor position...
    motorLayerReset(LAYER_1, OUTPUT_A)
    motorLayerReset(LAYER_1, OUTPUT_B)

    ; Set the motor speed:
    motorLayerSetSpeed(LAYER_1, OUTPUT_A, 20)
    motorLayerSetSpeed(LAYER_1, OUTPUT_B, 40)

    ; Select the motor type, this is only necessary to run this program in the simulator.
    ; If you connect a device then the IDE will detect the connected motor type.
    ; Possible type values are: `SPIKE_DEVICE_MEDIUM_MOTOR` and `SPIKE_DEVICE_LARGE_MOTOR`.
    motorLayerSetType(LAYER_1, OUTPUT_A, SPIKE_DEVICE_MEDIUM_MOTOR)
    motorLayerSetType(LAYER_1, OUTPUT_B, SPIKE_DEVICE_MEDIUM_MOTOR)

    repeat
        motorLayerMoveTo(LAYER_1, OUTPUT_A, 360)
        motorLayerMoveTo(LAYER_1, OUTPUT_B, -360)
        waitForMotors(MOTOR_BITS_AB)

        sleep(1000)

        motorLayerMoveTo(LAYER_1, OUTPUT_A, -360)
        motorLayerMoveTo(LAYER_1, OUTPUT_B, 360)
        waitForMotors(MOTOR_BITS_AB)

        sleep(1000)
    end
end
