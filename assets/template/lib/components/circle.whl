; @module Component/Circle
; @device I
; Wheel, copyright (c) 2020 - present by Arno van der Vegt
; Distributed under an MIT license: https://arnovandervegt.github.io/wheel/license.txt
namespace components.circle

; @const The form component module.
#define MODULE_COMPONENT_CIRCLE   97

; @const Module calls for circle component functions.
#define CIRCLE_SET_HIDDEN          0
#define CIRCLE_SET_X               1
#define CIRCLE_SET_Y               2
#define CIRCLE_SET_RADIUS          3
#define CIRCLE_SET_FILL_COLOR      4
#define CIRCLE_SET_BORDER_COLOR    5
#define CIRCLE_SET_BORDER_WIDTH    6
#define CIRCLE_SET_BORDER_RADIUS   7

; @event onClick             Called when the circle is clicked.
; @param windowHandle number The handle of the parent window of the circle.

; @event onMouseDown         Called when the mouse is pressed on the circle.
; @param windowHandle number The handle of the parent window of the circle.

; @event onMouseUp           Called when the mouse is released on the circle.
; @param windowHandle number The handle of the parent window of the circle.

; @event onMouseMove         Called when the mouse moves over the circle.
; @param windowHandle number The handle of the parent window of the circle.

; @event onMouseOut           Called when the mouse moves out of the circle.
; @param windowHandle number The handle of the parent window of the circle.

; @proc                   Hide the circle.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param hidden           Hidden `TRUE` or `FALSE`.
proc setHidden(number windowHandle, number componentHandle, number hidden)
    addr windowHandle
    mod  MODULE_COMPONENT_CIRCLE, CIRCLE_SET_HIDDEN
end

; @proc                   Set the x position of the circle.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param x                The x position in pixels.
proc setX(number windowHandle, number componentHandle, number x)
    addr windowHandle
    mod  MODULE_COMPONENT_CIRCLE, CIRCLE_SET_X
end

; @proc                   Set the y position of the circle.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param y                The y position in pixels.
proc setY(number windowHandle, number componentHandle, number y)
    addr windowHandle
    mod  MODULE_COMPONENT_CIRCLE, CIRCLE_SET_Y
end

; @proc                   Set the circle width.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param radius           The circle radius.
proc setRadius(number windowHandle, number componentHandle, number radius)
    addr windowHandle
    mod  MODULE_COMPONENT_CIRCLE, CIRCLE_SET_RADIUS
end

; @proc                   Set the fill color.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param red              The red color component, a value in the range of 0..255.
; @param green            The green color component, a value in the range of 0..255.
; @param blue             The blue color component, a value in the range of 0..255.
proc setFillColor(number windowHandle, number componentHandle, number red, number green, number blue)
    addr windowHandle
    mod  MODULE_COMPONENT_CIRCLE, CIRCLE_SET_FILL_COLOR
end

; @proc                   Set the border color.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param red              The red color component, a value in the range of 0..255.
; @param green            The green color component, a value in the range of 0..255.
; @param blue             The blue color component, a value in the range of 0..255.
proc setBorderColor(number windowHandle, number componentHandle, number red, number green, number blue)
    addr windowHandle
    mod  MODULE_COMPONENT_CIRCLE, CIRCLE_SET_BORDER_COLOR
end

; @proc                   Set the border width.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param borderWidth      The border width.
proc setBorderWidth(number windowHandle, number componentHandle, number borderWidth)
    addr windowHandle
    mod  MODULE_COMPONENT_CIRCLE, CIRCLE_SET_BORDER_WIDTH
end

; @proc                   Set the border radius.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param borderWidth      The border radius.
proc setBorderRadius(number windowHandle, number componentHandle, number borderRadius)
    addr windowHandle
    mod  MODULE_COMPONENT_CIRCLE, CIRCLE_SET_BORDER_RADIUS
end
