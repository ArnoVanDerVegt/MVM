; @module Component/StatusLight
; Wheel, copyright (c) 2020 - present by Arno van der Vegt
; Distributed under an MIT license: https://arnovandervegt.github.io/wheel/license.txt
namespace components.statusLight

; @const The status light component module.
#define MODULE_COMPONENT_STATUS_LIGHT        65

; @const Module calls for status light component functions.
#define STATUS_LIGHT_COMPONENT_SET_TAB_INDEX  0
#define STATUS_LIGHT_COMPONENT_SET_HIDDEN     1
#define STATUS_LIGHT_COMPONENT_SET_X          3
#define STATUS_LIGHT_COMPONENT_SET_Y          4
#define STATUS_LIGHT_COMPONENT_SET_COLOR      5

; @proc                   Set the tab index of the status light.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param tabIndex         The tab index.
proc setTabIndex(number windowHandle, number componentHandle, number tabIndex)
    addr windowHandle
    mod  MODULE_COMPONENT_STATUS_LIGHT, STATUS_LIGHT_COMPONENT_SET_TAB_INDEX
end

; @proc                   Hide the status light.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param hidden           Hidden `TRUE` or `FALSE`.
proc setHidden(number windowHandle, number componentHandle, number tabIndex)
    addr windowHandle
    mod  MODULE_COMPONENT_STATUS_LIGHT, STATUS_LIGHT_COMPONENT_SET_HIDDEN
end

; @proc                   Disable the status light.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param disabled         Disabled `TRUE` or `FALSE`.
proc setDisabled(number windowHandle, number componentHandle, number disabled)
    addr windowHandle
    mod  MODULE_COMPONENT_STATUS_LIGHT, STATUS_LIGHT_COMPONENT_SET_DISABLED
end

; @proc                   Set the x position of the status light.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param x                The x position in pixels.
proc setX(number windowHandle, number componentHandle, number x)
    addr windowHandle
    mod  MODULE_COMPONENT_STATUS_LIGHT, STATUS_LIGHT_COMPONENT_SET_X
end

; @proc                   Set the y position of the status light.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param y                The y position in pixels.
proc setY(number windowHandle, number componentHandle, number y)
    addr windowHandle
    mod  MODULE_COMPONENT_STATUS_LIGHT, STATUS_LIGHT_COMPONENT_SET_Y
end

; @proc                   Set the status light color.
; @param windowhandle     The handle of the window.
; @param componentHandle  The handle of the component.
; @param color            The status light color.
proc setColor(number windowHandle, number componentHandle, number y)
    addr windowHandle
    mod  MODULE_COMPONENT_STATUS_LIGHT, STATUS_LIGHT_COMPONENT_SET_COLOR
end
