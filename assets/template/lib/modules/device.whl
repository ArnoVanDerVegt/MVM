; @module Device
; @device E,P
; Wheel, copyright (c) 2020 - present by Arno van der Vegt
; Distributed under an MIT license: https://arnovandervegt.github.io/wheel/license.txt

; @description
; This file contains a procedure to select the type of device which is controlled through the simulator.
; You can control `EV3` or `Powered Up` devices.

; @const The device module.
#define MODULE_DEVICE     12

; @const The avaialable layers, layers 5..8 are only available for Powered Up.
#define LAYER_1            0
#define LAYER_2            1
#define LAYER_3            2
#define LAYER_4            3
#define LAYER_5            4
#define LAYER_6            5
#define LAYER_7            6
#define LAYER_8            7
#define LAYER_9            8
#define LAYER_10           9

; @const The avaialable types of devices.
#define DEVICE_EV3         0    ; `image:images/ev3/ev364.png`
#define DEVICE_POWERED_UP  1    ; `image:images/poweredup/hub64.png`
#define DEVICE_SPIKE       2    ; `image:images/spike/spike64.png`

; @const Module calls for device functions.
#define DEVICE_SELECT      0

; @proc             Select the device.
; @device E,P,S
; @param device     The device, valid values are `DEVICE_EV3`, `DEVICE_POWERED_UP` or `DEVICE_SPIKE`.
proc selectDevice(number device)
    addr device
    mod  MODULE_DEVICE, DEVICE_SELECT
end
