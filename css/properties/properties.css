body.ide.no-properties div.properties {
    display:                        none;
}
.properties {
    position:                       absolute;
    right:                          0;
    top:                            40px;
    width:                          304px;
    height:                         calc(100% - 24px);
    background-color:               var(--ui-background1);
    border:                         var(--ui-border1);
    border-width:                   0 0 0 1px;
    z-index:                        1;
}
.properties .tabs {
    top:                            48px;
    z-index:                        100;
}
.properties .properties-options {
    float:                          left;
    width:                          100%;
    height:                         40px;
    margin:                         0;
    border:                         var(--ui-border1);
    border-width:                   0 0 1px 0;
    background-color:               var(--ui-background2);
}
.properties .properties-options .close-button {
    float:                          right;
    margin:                         8px 8px 0 0;
}
.properties .properties-options .dropdown {
    float:                          right;
    margin:                         8px 8px 0 0;
    width:                          calc(100% - 140px);
}
.properties .component-uid {
    position:                       absolute;
    left:                           0;
    top:                            calc(40px + 47px);
    width:                          100%;
    height:                         32px;
    line-height:                    32px;
    text-align:                     center;
    border:                         var(--ui-border1);
    border-width:                   1px 0 1px 0;
    color:                          var(--ui-text1);
    font-size:                      12px;
    font-family:                    monospace;
}
/* Properties, events */
.properties .properties-container,
.properties .events-container,
.properties .components-container {
    position:                       absolute;
    left:                           0;
    top:                            calc(40px + 47px + 32px);
    width:                          100%;
    height:                         calc(100% - 56px - 47px);
    overflow:                       hidden;
    overflow-y:                     scroll;
    display:                        none;
    z-index:                        50;
}
.properties .properties-container.visible {
    display:                        block;
}
.properties .events-container.visible {
    display:                        block;
}
.properties .components-container.visible {
    display:                        block;
}
.properties .properties-container .property-separator,
.properties .events-container .event-separator {
    position:                       absolute;
    top:                            0;
    border:                         var(--ui-border1);
    border-width:                   0 1px 0 0;
    border-style:                   dotted;
    width:                          50%;
    height:                         100%;
    pointer-events:                 none;
}
.properties .properties-container .property,
.properties .events-container .event {
    float:                          left;
    width:                          100%;
    border:                         var(--ui-border1);
    border-width:                   0 0 1px 0;
    border-style:                   dotted;
    cursor:                         pointer;
}
.properties .properties-container .property.focus,
.properties .events-container .event.focus {
    background-color:               var(--ui-background2);
}
.properties .properties-container .property .property-name,
.properties .properties-container .property .property-value,
.properties .events-container .event .event-name,
.properties .events-container .event .event-value {
    float:                          left;
    width:                          50%;
    height:                         28px;
    font-size:                      15px;
    line-height:                    28px;
    padding:                        0;
}
.properties .properties-container .property .property-name,
.properties .events-container .event .event-name {
    padding:                        0 0 0 8px;
    position:                       relative;
    -webkit-user-select:            none;
}
/* Text input */
.properties .properties-container .property .property-value .text-input {
    float:                          left;
    width:                          100%;
    height:                         28px;
    border:                         1px solid transparent;
    padding:                        0 0 0 8px;
    line-height:                    26px;
    outline:                        none;
    font-size:                      15px;
    background-color:               transparent;
}
.properties .properties-container .property .property-value .text-input:focus {
    border:                         var(--focus-border-dotted);
}
.properties .properties-container .property .property-value .text-input:focus.invalid,
.properties .properties-container .property .property-value .text-input.invalid {
    border:                         var(--text-input-invalid-border);
}
/* Icon select */
.properties .properties-container .property .property-value .icon-select,
.properties .properties-container .property .property-value .checkbox {
    float:                          left;
    position:                       relative;
}
.properties .properties-container .property .property-value a.icon-select img {
    position:                       relative;
    top:                            -2px;
}
.properties .properties-container .property .property-value a.icon-select {
    margin:                         1px 0 0 6px;
}
/* Boolean */
.properties .properties-container .property .property-value .checkbox {
    margin:                         3px 0 0 6px;
}
/* Boolean */
.properties .properties-container .property .property-value .dropdown {
    margin:                         2px 0 0 6px;
    width:                          calc(100% - 12px);
}
/* List */
.properties .properties-container .property .property-name.list-focus,
.properties .properties-container .property .property-value.list-focus {
    height:                         156px;
}
.properties .properties-container .property .property-value a.list-selected,
.properties .properties-container .property .property-value a.list-selected:visited {
    outline:                        none;
    float:                          left;
    width:                          100%;
    height:                         28px;
    padding:                        0 0 0 8px;
    text-decoration:                none;
    color:                          var(--ui-text1);
}
.properties .properties-container .property .property-value a.list-selected {
    width:                          calc(100% - 40px);
}
.properties .properties-container .property .property-name .list-content {
    display:                        none;
    position:                       absolute;
    width:                          303px;
    height:                         calc(100% - 28px);
    left:                           0px;
    top:                            28px;
}
.properties .properties-container .property .property-name.list-focus .list-content {
    display:                        block;
    background-color:               var(--ui-background2);
    border:                         var(--ui-border1);
    border-width:                   1px 0 0 0;
    border-style:                   dotted;
    overflow:                       hidden;
    overflow-y:                     scroll;
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item {
    float:                          left;
    width:                          100%;
    height:                         28px;
    line-height:                    26px;
    font-size:                      15px;
    padding:                        0 0 0 8px;
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item:hover {
    background-color:               var(--files-hover-background);
    color:                          var(--files-hover-color);
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item.active,
.properties .properties-container .property .property-name.list-focus .list-content .list-item.active:hover {
    background-color:               var(--files-selected-background);
    color:                          var(--files-hover-color);
}
.properties .properties-container .property a.list-item-button.add,
.properties .properties-container .property .property-name.list-focus .list-content .list-item a.list-item-button {
    float:                          right;
    width:                          24px;
    height:                         28px;
    text-align:                     center;
    color:                          inherit;
    text-decoration:                none;
    opacity:                        0.25;
}
.properties .properties-container .property a.list-item-button.add {
    font-weight:                    bold;
    font-size:                      20px;
}
.properties .properties-container .property .property-name.list-focus .list-content.remove-last .list-item a.list-item-button.delete {
    visibility:                     hidden;
}
.properties .properties-container .property .property-name.list-focus .list-content.remove-last .list-item:last-child a.list-item-button.delete {
    visibility:                     visible;
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item:first-child a.list-item-button.up,
.properties .properties-container .property .property-name.list-focus .list-content .list-item:last-child a.list-item-button.down {
    visibility:                     hidden;
}
.properties .properties-container .property a.list-item-button.add,
.properties .properties-container .property .property-name.list-focus .list-content .list-item a.list-item-button.delete {
    margin-right:                   16px;
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item.active a,
.properties .properties-container .property .property-name.list-focus .list-content .list-item:hover a {
    opacity:                        1;
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item span.list-item-title {
    float:                          left;
    width:                          calc(100% - 90px);
    overflow:                       hidden;
    text-overflow:                  ellipsis;
    white-space:                    nowrap;
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item input[type="text"].list-item-input {
    float:                          left;
    width:                          calc(100% - 90px);
    outline:                        none;
    border:                         0;
    height:                         24px;
    line-height:                    24px;
    font-size:                      15px;
    margin:                         2px 0 0 0;
    display:                        none;
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item.active input[type="text"].list-item-input {
    display:                        block;
}
.properties .properties-container .property .property-name.list-focus .list-content .list-item.active span.list-item-title {
    display:                        none;
}
/* Rgb */
.properties .properties-container .property .property-value.rgb {
    overflow:                       hidden;
}
.properties .properties-container .property .property-name.color-focus,
.properties .properties-container .property .property-value.color-focus {
    height:                         156px;
}
.properties .properties-container .property .property-value .color-row {
    float:                          left;
    width:                          100%;
    height:                         28px;
}
.properties .properties-container .property .property-value .color-row .color-label,
.properties .properties-container .property .property-value .color-row .color {
    float:                          left;
}
.properties .properties-container .property .property-value .color-row .color-label {
    width:                          44px;
    height:                         28px;
    line-height:                    28px;
}
.properties .properties-container .property .property-value .color-row .color-label.small {
    font-size:                      11px;
    padding:                        0 0 0 8px;
}
.properties .properties-container .property .property-value .color-row .color {
    width:                          20px;
    height:                         20px;
    border:                         var(--ui-border1);
    margin:                         4px 4px 0 4px;
    border-radius:                  2px;
}
.properties .properties-container .property .property-value .color-row .text-input {
    float:                          right;
    width:                          calc(100% - 80px);
    height:                         28px;
    border:                         1px solid transparent;
    padding:                        0 0 0 8px;
    line-height:                    26px;
    outline:                        none;
    font-size:                      15px;
    background-color:               transparent;
}
/* Events */
.properties .events-container .event .event-value .button {
    margin:                         2px 0 0 8px;
    width:                          28px;

}
.properties .events-container .event .event-value .current-value {
    float:                          right;
    width:                          calc(100% - 42px);
    height:                         100%;
    overflow:                       hidden;
    text-overflow:                  ellipsis;
    direction:                      rtl;
    padding:                        0 8px 0 0;
}
/* Components */
.components-container .title,
.components-container .group {
    float:                          left;
    width:                          100%;
    padding:                        0 0 0 8px;
    margin:                         0 0 0 0;
}
.components-container .title {
    height:                         32px;
    line-height:                    32px;
    font-family:                    latolight;
    font-size:                      17px;
    color:                          var(--ui-text1);
    opacity:                        0.65;
}
input[type="button"].component-button {
    float:                          left;
    width:                          48px;
    height:                         48px;
    border:                         2px solid transparent;
    border-radius:                  24px;
    background-repeat:              no-repeat;
    background-size:                38px 38px;
    background-position:            3px 6px;
    background-color:               transparent;
    margin:                         0 4px 4px 0;
    box-shadow:                     none;
    opacity:                        0.6;
    transition:                     opacity 0.3s, border-color 0.3s;
}
input[type="button"].active.component-button:focus,
input[type="button"].active.component-button {
    border:                         2px solid var(--color-green);
    opacity:                        1;
}
input[type="button"].component-button:hover {
    opacity:                        1;
}
input[type="button"].component-button:focus {
    border:                         2px solid var(--color-blue);
}

input[type="button"].component-button:focus {
    border:                         2px solid var(--color-blue);
}
input[type="button"].component-button.component-btn {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="4" rx="2" ry="2" width="18" height="10" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" />    <text x="5.5" y="11.6" fill="rgb(0,0,0)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;">Ok</text></svg>');
}
body.ide.dark input[type="button"].component-button.component-btn {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="4" rx="2" ry="2" width="18" height="10" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" />    <text x="5.5" y="11.6" fill="rgb(255,255,255)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;">Ok</text></svg>');
}
input[type="button"].component-button.component-select-btn {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="4" rx="2" ry="2" width="18" height="10" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" />    <line x1="10" y1="4" x2="10" y2="14" style="stroke:rgb(0,0,0);stroke-width:1;" />    <text x="3.3" y="11.6" fill="rgb(0,0,0)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;">A</text>    <text x="12.1" y="11.6" fill="rgb(0,0,0)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;">B</text></svg>');
}
body.ide.dark input[type="button"].component-button.component-select-btn {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="4" rx="2" ry="2" width="18" height="10" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" />    <line x1="10" y1="4" x2="10" y2="14" style="stroke:rgb(255,255,255);stroke-width:1;" />    <text x="3.3" y="11.5" fill="rgb(255,255,255)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;">A</text>    <text x="12.1" y="11.5" fill="rgb(255,255,255)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;">B</text></svg>');
}
input[type="button"].component-button.component-text-input {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="4" rx="2" ry="2" width="18" height="10" style="stroke:rgb(0,0,0);stroke-width:0.5;fill:transparent;" />    <text x="2" y="11.6" fill="rgb(0,0,0)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;">ab</text>    <line x1="11" y1="6" x2="11" y2="12" style="stroke:rgb(0,0,0);stroke-width:0.5;" />    <line x1="10" y1="6" x2="12" y2="6" style="stroke:rgb(0,0,0);stroke-width:0.5;" stroke-linecap="round" />    <line x1="10" y1="12" x2="12" y2="12" style="stroke:rgb(0,0,0);stroke-width:0.5;" stroke-linecap="round" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-text-input {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="4" rx="2" ry="2" width="18" height="10" style="stroke:rgb(255,255,255);stroke-width:0.5;fill:transparent;" />    <text x="2" y="11.6" fill="rgb(255,255,255)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;">ab</text>    <line x1="11" y1="6" x2="11" y2="12" style="stroke:rgb(255,255,255);stroke-width:0.5;" />    <line x1="10" y1="6" x2="12" y2="6" style="stroke:rgb(255,255,255);stroke-width:0.5;" stroke-linecap="round" />    <line x1="10" y1="12" x2="12" y2="12" style="stroke:rgb(255,255,255);stroke-width:0.5;" stroke-linecap="round" /></svg>');
}
input[type="button"].component-button.component-status-light {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="20" height="20" xmlns="http://www.w3.org/2000/svg">    <circle cx="10" cy="6" r="4" fill="transparent" style="stroke:rgb(0,0,0);stroke-width:1;"/>    <line x1="8" y1="10" x2="8" y2="13.5" style="stroke:rgb(0,0,0);stroke-width:1;" stroke-linecap="round"/>    <line x1="8" y1="13.5" x2="10" y2="15" style="stroke:rgb(0,0,0);stroke-width:1;" stroke-linecap="round"/>    <line x1="10" y1="15" x2="12" y2="13.5" style="stroke:rgb(0,0,0);stroke-width:1;" stroke-linecap="round"/>    <line x1="12" y1="13.5" x2="12" y2="10" style="stroke:rgb(0,0,0);stroke-width:1;" stroke-linecap="round"/>    <line x1="8" y1="10.5" x2="12" y2="11.5" style="stroke:rgb(0,0,0);stroke-width:0.5;" stroke-linecap="round"/>    <line x1="8" y1="11.5" x2="12" y2="12.5" style="stroke:rgb(0,0,0);stroke-width:0.5;" stroke-linecap="round"/>    <line x1="8" y1="12.5" x2="12" y2="13.5" style="stroke:rgb(0,0,0);stroke-width:0.5;" stroke-linecap="round"/></svg>');
}
body.ide.dark input[type="button"].component-button.component-status-light {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="20" height="20" xmlns="http://www.w3.org/2000/svg">    <circle cx="10" cy="6" r="4" fill="transparent" style="stroke:rgb(255,255,255);stroke-width:1;"/>    <line x1="8" y1="10" x2="8" y2="13.5" style="stroke:rgb(255,255,255);stroke-width:1;" stroke-linecap="round"/>    <line x1="8" y1="13.5" x2="10" y2="15" style="stroke:rgb(255,255,255);stroke-width:1;" stroke-linecap="round"/>    <line x1="10" y1="15" x2="12" y2="13.5" style="stroke:rgb(255,255,255);stroke-width:1;" stroke-linecap="round"/>    <line x1="12" y1="13.5" x2="12" y2="10" style="stroke:rgb(255,255,255);stroke-width:1;" stroke-linecap="round"/>    <line x1="8" y1="10.5" x2="12" y2="11.5" style="stroke:rgb(255,255,255);stroke-width:0.5;" stroke-linecap="round"/>    <line x1="8" y1="11.5" x2="12" y2="12.5" style="stroke:rgb(255,255,255);stroke-width:0.5;" stroke-linecap="round"/>    <line x1="8" y1="12.5" x2="12" y2="13.5" style="stroke:rgb(255,255,255);stroke-width:0.5;" stroke-linecap="round"/></svg>');
}

input[type="button"].component-button.component-panel {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="3" y="3" width="14" height="14" stroke="rgb(0,0,0)" fill="transparent" style="stroke-linejoin:round;"/></svg>');
}
body.ide.dark input[type="button"].component-button.component-panel {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="3" y="3" width="14" height="14" stroke="rgb(255,255,255)" fill="transparent" style="stroke-linejoin:round;"/></svg>');
}
input[type="button"].component-button.component-tabs {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">    <polygon points="3,17 17,17 17,6 10,6 10,3 3,3" stroke="rgb(0,0,0)" fill="transparent" style="stroke-linejoin:round;"/></svg>');
}
body.ide.dark input[type="button"].component-button.component-tabs {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">    <polygon points="3,17 17,17 17,6 10,6 10,3 3,3" stroke="rgb(255,255,255)" fill="transparent" style="stroke-linejoin:round;"/></svg>');
}
input[type="button"].component-button.component-panel,
input[type="button"].component-button.component-tabs,
body.ide.dark input[type="button"].component-button.component-panel,
body.ide.dark input[type="button"].component-button.component-tabs {
    background-position:            3px 3px;
}

input[type="button"].component-button.component-slider {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="7.5" rx="1" ry="1" width="18" height="2" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" />    <circle cx="8" cy="8.5" r="2" style="stroke:rgb(0,0,0);stroke-width:1;fill:rgb(0,0,0);" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-slider {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="7.5" rx="1" ry="1" width="18" height="2" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" />    <circle cx="8" cy="8.5" r="2" style="stroke:rgb(255,255,255);stroke-width:1;fill:rgb(255,255,255);" /></svg>');
}
input[type="button"].component-button.component-slider,
body.ide.dark input[type="button"].component-button.component-slider {
    background-position:            3px 7px;
}

input[type="button"].component-button.component-label {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <text x="-0.25" y="11.6" fill="rgb(0,0,0)" style="font-family:latolight, Arial;font-size:7.5px;line-height:8px;">Label</text></svg>');
}
body.ide.dark input[type="button"].component-button.component-label {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <text x="-0.25" y="11.6" fill="rgb(255,255,255)" style="font-family:latolight, Arial;font-size:7.5px;line-height:8px;">Label</text></svg>');
}
input[type="button"].component-button.component-checkbox {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <text x="7" y="12" fill="rgb(0,0,0)" style="font-family:monospace;font-size:12px;line-height:12px;">✓</text>    <rect x="4" y="5" rx="2" ry="2" width="10" height="10" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-checkbox {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <text x="7" y="12" fill="rgb(255,255,255)" style="font-family:monospace;font-size:12px;line-height:12px;">✓</text>    <rect x="4" y="5" rx="2" ry="2" width="10" height="10" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" /></svg>');
}
input[type="button"].component-button.component-label,
input[type="button"].component-button.component-checkbox,
body.ide.dark input[type="button"].component-button.component-label,
body.ide.dark input[type="button"].component-button.component-checkbox {
    background-position:            4.5px 5px;
}

input[type="button"].component-button.component-rectangle {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="20" height="20" xmlns="http://www.w3.org/2000/svg">    <rect x="5" y="5" width="10" height="10" style="fill:rgb(0,0,0)" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-rectangle {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="20" height="20" xmlns="http://www.w3.org/2000/svg">    <rect x="5" y="5" width="10" height="10" style="fill:white" /></svg>');
}
input[type="button"].component-button.component-circle {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="20" height="20" xmlns="http://www.w3.org/2000/svg">    <circle cx="10" cy="10" r="6" fill="rgb(0,0,0)" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-circle {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="20" height="20" xmlns="http://www.w3.org/2000/svg">    <circle cx="10" cy="10" r="6" fill="white" /></svg>');
}
input[type="button"].component-button.component-rectangle,
input[type="button"].component-button.component-circle,
body.ide.dark input[type="button"].component-button.component-rectangle,
body.ide.dark input[type="button"].component-button.component-circle {
    background-position:            3px 3px;
}

input[type="button"].component-button.component-image {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="1.5" rx="2" ry="2" width="16" height="16" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" />    <line x1="3" y1="15.5" x2="7" y2="6" style="stroke:rgb(0,0,0);stroke-width:1;" />    <line x1="7" y1="6" x2="10" y2="11" style="stroke:rgb(0,0,0);stroke-width:1;" />    <line x1="10" y1="11" x2="12" y2="9" style="stroke:rgb(0,0,0);stroke-width:1;" />    <line x1="12" y1="9" x2="15" y2="15.5" style="stroke:rgb(0,0,0);stroke-width:1;" />    <circle cx="12" cy="5.5" r="2" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-image {
    background-image:               url('data:image/svg+xml,<svg version="1.1" baseProfile="full" width="18" height="18" viewBox="0 1 20 20" xmlns="http://www.w3.org/2000/svg">    <rect x="1" y="1.5" rx="2" ry="2" width="16" height="16" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" />    <line x1="3" y1="15.5" x2="7" y2="6" style="stroke:rgb(255,255,255);stroke-width:1;" />    <line x1="7" y1="6" x2="10" y2="11" style="stroke:rgb(255,255,255);stroke-width:1;" />    <line x1="10" y1="11" x2="12" y2="9" style="stroke:rgb(255,255,255);stroke-width:1;" />    <line x1="12" y1="9" x2="15" y2="15.5" style="stroke:rgb(255,255,255);stroke-width:1;" />    <circle cx="12" cy="5.5" r="2" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" /></svg>');
}
input[type="button"].component-button.component-pu-device {
    background-image:               url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" baseProfile="full" height="18" version="1.1" viewBox="0 1 20 20" width="18">    <rect height="16" rx="2" ry="2" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" width="16" x="1" y="1" />    <text style="font-family:latolight, Arial;font-size:7px;line-height:7px;" text-anchor="middle" x="9" y="8">PU</text>    <path d="M3,9 a1,1 0 0,0 12,0" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" />    <path d="M5,9 a1,1 0 0,0 8,0" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" />    <path d="M7,9 a1,1 0 0,0 4,0" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-pu-device {
    background-image:               url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" baseProfile="full" height="18" version="1.1" viewBox="0 1 20 20" width="18">    <rect height="16" rx="2" ry="2" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" width="16" x="1" y="1" />    <text fill="rgb(255,255,255)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;" text-anchor="middle" x="9" y="8">PU</text>    <path d="M3,9 a1,1 0 0,0 12,0" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" />    <path d="M5,9 a1,1 0 0,0 8,0" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" />    <path d="M7,9 a1,1 0 0,0 4,0" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" /></svg>');
}
input[type="button"].component-button.component-ev3-sensor {
    background-image:               url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" baseProfile="full" height="18" version="1.1" viewBox="0 1 20 20" width="18">    <rect height="16" rx="2" ry="2" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" width="16" x="1" y="1" />    <text style="font-family:latolight, Arial;font-size:7px;line-height:7px;" text-anchor="middle" x="9" y="8">EV3</text>    <path d="M3,9 a1,1 0 0,0 12,0" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" />    <path d="M5,9 a1,1 0 0,0 8,0" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" />    <path d="M7,9 a1,1 0 0,0 4,0" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-ev3-sensor {
    background-image:               url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" baseProfile="full" height="18" version="1.1" viewBox="0 1 20 20" width="18">    <rect height="16" rx="2" ry="2" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" width="16" x="1" y="1" />    <text fill="rgb(255,255,255)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;" text-anchor="middle" x="9" y="8">EV3</text>    <path d="M3,9 a1,1 0 0,0 12,0" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" />    <path d="M5,9 a1,1 0 0,0 8,0" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" />    <path d="M7,9 a1,1 0 0,0 4,0" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" /></svg>');
}
input[type="button"].component-button.component-ev3-motor {
    background-image:               url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" baseProfile="full" height="18" version="1.1" viewBox="0 1 20 20" width="18">    <rect height="16" rx="2" ry="2" style="stroke:rgb(0,0,0);stroke-width:1;fill:transparent;" width="16" x="1" y="1" />    <text style="font-family:latolight, Arial;font-size:7px;line-height:7px;" text-anchor="middle" x="9" y="8">EV3</text>    <circle cx="9" cy="12" r="3" style="stroke:rgb(0,0,0);stroke-width:0.5;fill:transparent;" />    <line style="stroke:rgb(0,0,0);stroke-width:0.5;" x1="7" x2="11" y1="10" y2="14" />    <line style="stroke:rgb(0,0,0);stroke-width:0.5;" x1="11" x2="7" y1="10" y2="14" /></svg>');
}
body.ide.dark input[type="button"].component-button.component-ev3-motor {
    background-image:               url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" baseProfile="full" height="18" version="1.1" viewBox="0 1 20 20" width="18">    <rect height="16" rx="2" ry="2" style="stroke:rgb(255,255,255);stroke-width:1;fill:transparent;" width="16" x="1" y="1" />    <text fill="rgb(255,255,255)" style="font-family:latolight, Arial;font-size:7px;line-height:7px;" text-anchor="middle" x="9" y="8">EV3</text>    <circle cx="9" cy="12" r="3" style="stroke:rgb(255,255,255);stroke-width:0.5;fill:transparent;" />    <line style="stroke:rgb(255,255,255);stroke-width:0.5;" x1="7" x2="11" y1="10" y2="14" />    <line style="stroke:rgb(255,255,255);stroke-width:0.5;" x1="11" x2="7" y1="10" y2="14" /></svg>');
}
input[type="button"].component-button.component-image,
input[type="button"].component-button.component-pu-sensor,
input[type="button"].component-button.component-ev3-sensor,
input[type="button"].component-button.component-ev3-motor,
body.ide.dark input[type="button"].component-button.component-image,
body.ide.dark input[type="button"].component-button.component-pu-sensor,
body.ide.dark input[type="button"].component-button.component-ev3-sensor,
body.ide.dark input[type="button"].component-button.component-ev3-motor {
    background-size:                35px 35px;
    background-position:            5.5px 7px;
}
